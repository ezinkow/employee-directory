{"version":3,"sources":["components/SearchForm.js","components/EmployeeDisplay.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["SearchForm","nameSearch","handleNameChange","handleSubmit","className","for","placeholder","type","value","onChange","useStyles","makeStyles","table","minWidth","EmployeeDisplay","classes","useState","setNameSearch","names","setNames","formatDate","date","dateArray","split","year","join","useEffect","event","a","fetch","response","json","data","console","log","results","apiCall","dataGrid","field","sort","target","TableContainer","component","Paper","sortModel","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","name","src","picture","thumbnail","alt","first","last","cell","email","dob","index","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.612a01ac.chunk.js","sourcesContent":["export default function SearchForm({ nameSearch, handleNameChange, handleSubmit }) {\n    return (\n        <div className=\"searchForm\">\n            <form>\n                <label for='employee search'>Search for employee: </label>\n                <input\n                    placeholder=\"Employee name\"\n                    type=\"text\"\n                    value={nameSearch}\n                    onChange={handleNameChange}\n                />\n            </form>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport SearchForm from './SearchForm'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { DataGrid } from '@material-ui/data-grid';\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\nexport default function EmployeeDisplay() {\n    const classes = useStyles();\n    const [nameSearch, setNameSearch] = useState(\"\")\n    const [names, setNames] = useState()\n    useEffect(() => {\n        const apiCall = async (event) => {\n            const apiCall = `https://randomuser.me/api/?results=100&nat=us`\n\n            try {\n                const response = await fetch(apiCall)\n                const data = await response.json()\n                // const newArray = []\n                console.log(data)\n                setNames(data.results)\n            } catch (err) {\n                console.log(err)\n            }\n        }\n        apiCall()\n    }, [])\n\n    useEffect(() => {\n        console.log('names', ...names)\n    })\n\n    function formatDate(date) {\n        const dateArray = date.split(\"-\");\n        const year = dateArray[0];\n        const month = dateArray[1];\n        const dayArray = dateArray[2].split(\"T\");\n        const day = dayArray[0];\n        const formattedDate = [month, day, year].join(\"-\");\n        return formattedDate;\n    }\n\n    const handleNameChange = event => {\n        console.log(event.target.value)\n        setNameSearch(event.target.value)\n    }\n    useEffect(() => {\n        console.log(nameSearch)\n    })\n\n    if (names) {\n        var dataGrid = [{ field: 'name.first', sort: 'asc' }]\n    }\n\n    return (\n        <>\n            <SearchForm\n                handleNameChange={handleNameChange}\n                nameSearch={nameSearch}\n            />\n            <div className=\"table\">\n                <TableContainer component={Paper}>\n                    <DataGrid\n                        {...names}\n                        sortModel={dataGrid}\n                    />\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"left\">Image</TableCell>\n                                <TableCell align=\"left\">Name</TableCell>\n                                <TableCell align=\"left\">Phone</TableCell>\n                                <TableCell align=\"left\">Email</TableCell>\n                                <TableCell align=\"left\">DOB</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {names ? names.map((name) => (\n                                < TableRow key={name.index}>\n                                    <TableCell>\n                                        <img src={name.picture.thumbnail} alt={`photo for ${name.name.first} ${name.name.last}`}\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        {name.name.first} {name.name.last}\n                                    </TableCell>\n                                    <TableCell>\n                                        {name.cell}\n                                    </TableCell>\n                                    <TableCell>\n                                        {name.email}\n                                    </TableCell>\n                                    <TableCell>\n                                        {formatDate(name.dob.date)}\n                                    </TableCell>\n                                </TableRow>\n                            )) : \"\"}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        </>\n    )\n}","export default function Header () {\n    return(\n        <div className=\"header\">\n        <h1>Employee Directory</h1>\n        </div>\n    )\n}\n","import './App.css';\nimport EmployeeDisplay from './components/EmployeeDisplay';\nimport Header from './components/Header'\nimport React, { useState, useEffect } from \"react\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <EmployeeDisplay />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}